import{_ as c,r as l,o as p,c as d,a as n,b as e,d as a,w as o,e as s}from"./app-ab31641a.js";const r="/assets/testApache-5036e196.jpg",u="/assets/nano-39ee5257.jpg",h="/assets/sslDone-b70d632f.jpg",v={},m=s(`<h1 id="apache-web-网站服务" tabindex="-1"><a class="header-anchor" href="#apache-web-网站服务" aria-hidden="true">#</a> Apache（Web 网站服务）</h1><p>Apache 包含在 CentOS 的 <code>httpd</code> 服务中。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>输入：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum update                                   <span class="token comment"># 更新软件源</span>
<span class="token function">sudo</span> yum <span class="token function">install</span> httpd                            <span class="token comment"># 安装 Apache</span>
<span class="token function">sudo</span> firewall-cmd --add-service<span class="token operator">=</span>http <span class="token parameter variable">--permanent</span>  <span class="token comment"># 开放 80 端口</span>
<span class="token function">sudo</span> firewall-cmd --add-service<span class="token operator">=</span>https <span class="token parameter variable">--permanent</span> <span class="token comment"># 开放 443 端口</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start httpd.service  <span class="token comment"># 启动 Apache</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> httpd.service <span class="token comment"># 设置开机启动 Apache</span>
<span class="token function">sudo</span> systemctl status httpd.service <span class="token comment"># 查看 Apache 运行状态</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动后可以在虚拟机浏览器中访问 <code>http://127.0.0.1/</code> 测试，成功页面：</p><p><img src="`+r+'" alt="测试Apache"></p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><h3 id="配置简单网站" tabindex="-1"><a class="header-anchor" href="#配置简单网站" aria-hidden="true">#</a> 配置简单网站</h3>',11),k=n("p",null,[e("网站主目录为 "),n("code",null,"/skillschina/market/"),e("，网页的内容是“迎访问网上交易系统”；（2分）")],-1),g=s(`<li><p>建立目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /skillschina/market/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><code>mkdir</code> - 新建一个目录； <code>mkdir -p</code> - 自动建立父级目录；详细说明请在终端输入 <code>man mkdir</code> 查看</p></blockquote></li>`,1),f=s(`<p>在 <code>/skillschina/market/</code> 目录下建立 <code>index.html</code> 文件，然后使用 <strong>自己喜欢的</strong> 文本编辑器编辑文件内容：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>欢迎访问网上交易系统<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><img src="`+u+'" alt="nano 编辑器"></p></blockquote>',3),b={href:"https://www.runoob.com/linux/linux-vim.html",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,"修改默认配置文件",-1),_=s(`<li><p>备份默认配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/httpd/conf/ <span class="token comment"># 改变工作目录</span>
<span class="token function">sudo</span> <span class="token function">cp</span> httpd.conf httpd.conf.bak <span class="token comment"># 备份原始配置文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>修改配置文件 <code>httpd.conf</code>，第 119 行和第 131 行：</p><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">113 
</span><span class="token prefix unchanged"> </span><span class="token line">114 #
</span><span class="token prefix unchanged"> </span><span class="token line">115 # DocumentRoot: The directory out of which you will serve your
</span><span class="token prefix unchanged"> </span><span class="token line">116 # documents. By default, all requests are taken from this directory, but
</span><span class="token prefix unchanged"> </span><span class="token line">117 # symbolic links and aliases may be used to point to other locations.
</span><span class="token prefix unchanged"> </span><span class="token line">118 #
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">119 DocumentRoot &quot;/var/www/html&quot;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">119 DocumentRoot &quot;/skillschina/market&quot;
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">120 
</span><span class="token prefix unchanged"> </span><span class="token line">121 #
</span><span class="token prefix unchanged"> </span><span class="token line">122 # Relax access to content within /var/www.
</span><span class="token prefix unchanged"> </span><span class="token line">123 #
</span><span class="token prefix unchanged"> </span><span class="token line">124 &lt;Directory &quot;/var/www&quot;&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">125     AllowOverride None
</span><span class="token prefix unchanged"> </span><span class="token line">126     # Allow open access:
</span><span class="token prefix unchanged"> </span><span class="token line">127     Require all granted
</span><span class="token prefix unchanged"> </span><span class="token line">128 &lt;/Directory&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">129 
</span><span class="token prefix unchanged"> </span><span class="token line">130 # Further relax access to the default document root:
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">131 &lt;Directory &quot;/var/www/html&quot;&gt;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">131 &lt;Directory &quot;/skillschina/market&quot;&gt;
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">132     #
</span><span class="token prefix unchanged"> </span><span class="token line">133     # Possible values for the Options directive are &quot;None&quot;, &quot;All&quot;,
</span><span class="token prefix unchanged"> </span><span class="token line">134     # or any combination of:
</span><span class="token prefix unchanged"> </span><span class="token line">135     #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
</span><span class="token prefix unchanged"> </span><span class="token line">136     #
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),w=n("p",null,"配置 SELinux",-1),q=s(`<p>推荐方法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>semanage fcontext <span class="token parameter variable">-a</span> <span class="token parameter variable">-t</span> httpd_sys_content_t <span class="token string">&#39;/skillschina/market/index.html&#39;</span>
restorecon <span class="token parameter variable">-v</span> <span class="token string">&#39;/skillschina/market/index.html&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),y={href:"http://linux.vbird.org/linux_basic/0440processcontrol.php#selinux",target:"_blank",rel:"noopener noreferrer"},L=s(`<li><p>不推荐方法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>setenforce <span class="token number">0</span> <span class="token comment"># 关闭 SELinux（立即生效，重启失效）；0-关；1-开</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将 <code>/etc/selinux/config</code> 文件的第7行：<code>SELINUX=enforcing</code> 修改成：<code>SELINUX=disabled</code>（重启生效，重启有效）</p></li>`,1),S=s(`<li><p>测试</p><p>执行以下命令重启 Apache，然后使用浏览器访问 <code>http://127.0.0.1/</code> 测试是否修改成功。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart httpd.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),A={id:"创建-ssl-证书",tabindex:"-1"},C=n("a",{class:"header-anchor",href:"#创建-ssl-证书","aria-hidden":"true"},"#",-1),I=s(`<h3 id="配置-ssl-链接" tabindex="-1"><a class="header-anchor" href="#配置-ssl-链接" aria-hidden="true">#</a> 配置 SSL 链接</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> mod_ssl.x86_64 <span class="token comment"># 安装 SSL 模块</span>
<span class="token function">sudo</span> systemctl restart httpd.service <span class="token comment"># 重启 Apache</span>
<span class="token builtin class-name">cd</span> /etc/httpd/conf.d/
<span class="token function">sudo</span> <span class="token function">cp</span> ssl.conf ssl.conf.bak <span class="token comment"># 备份默认 SSL 配置文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 <code>/etc/httpd/conf.d/ssl.conf</code></p><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> 95 #   Server Certificate:
</span><span class="token prefix unchanged"> </span><span class="token line"> 96 # Point SSLCertificateFile at a PEM encoded certificate.  If
</span><span class="token prefix unchanged"> </span><span class="token line"> 97 # the certificate is encrypted, then you will be prompted for a
</span><span class="token prefix unchanged"> </span><span class="token line"> 98 # pass phrase.  Note that a kill -HUP will prompt again.  A new
</span><span class="token prefix unchanged"> </span><span class="token line"> 99 # certificate can be generated using the genkey(1) command.
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">100 SSLCertificateFile /etc/pki/tls/certs/localhost.crt
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">100 SSLCertificateFile /etc/pki/tls/certs/server.crt
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">101 
</span><span class="token prefix unchanged"> </span><span class="token line">102 #   Server Private Key:
</span><span class="token prefix unchanged"> </span><span class="token line">103 #   If the key is not combined with the certificate, use this
</span><span class="token prefix unchanged"> </span><span class="token line">104 #   directive to point at the key file.  Keep in mind that if
</span><span class="token prefix unchanged"> </span><span class="token line">105 #   you&#39;ve both a RSA and a DSA private key you can configure
</span><span class="token prefix unchanged"> </span><span class="token line">106 #   both in parallel (to also allow the use of DSA ciphers, etc.)
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">107 SSLCertificateKeyFile /etc/pki/tls/private/localhost.key
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">107 SSLCertificateKeyFile /etc/pki/tls/certs/server.key
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启 Apache 使配置文件生效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart httpd.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>访问 <code>https://127.0.0.1</code> 查看页面证书：</p><p><img src="`+h+`" alt="SSL"></p><h3 id="配置仅支持-https-协议链接" tabindex="-1"><a class="header-anchor" href="#配置仅支持-https-协议链接" aria-hidden="true">#</a> 配置仅支持 https 协议链接</h3><p>注释 <code>/etc/httpd/conf/httpd.conf</code> 文件，第 42 行：</p><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">34 # Listen: Allows you to bind Apache to specific IP addresses and/or
</span><span class="token prefix unchanged"> </span><span class="token line">35 # ports, instead of the default. See also the &lt;VirtualHost&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">36 # directive.
</span><span class="token prefix unchanged"> </span><span class="token line">37 #
</span><span class="token prefix unchanged"> </span><span class="token line">38 # Change this to Listen on specific IP addresses as shown below to 
</span><span class="token prefix unchanged"> </span><span class="token line">39 # prevent Apache from glomming onto all bound IP addresses.
</span><span class="token prefix unchanged"> </span><span class="token line">40 #
</span><span class="token prefix unchanged"> </span><span class="token line">41 #Listen 12.34.56.78:80
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">42 Listen 80
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">42 # Listen 80
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启 Apache 使配置文件生效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart httpd.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>现在 <code>http://127.0.0.1</code> 将无法访问，只能访问 <code>https://127.0.0.1</code></p><h3 id="配置访问日志路径与名称" tabindex="-1"><a class="header-anchor" href="#配置访问日志路径与名称" aria-hidden="true">#</a> 配置访问日志路径与名称</h3><p>配置访问日志路径和名称为 <code>/var/log/httpd/www.skillschina.com-access_log</code>，日志类型为普通型（<code>common</code>）。</p><p>修改 <code>/etc/httpd/conf/httpd.conf</code> 文件：</p><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">191 &lt;IfModule log_config_module&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">192     #
</span><span class="token prefix unchanged"> </span><span class="token line">193     # The following directives define some format nicknames for use with
</span><span class="token prefix unchanged"> </span><span class="token line">194     # a CustomLog directive (see below).
</span><span class="token prefix unchanged"> </span><span class="token line">195     #
</span><span class="token prefix unchanged"> </span><span class="token line">196     LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b \\&quot;%{Referer}i\\&quot; \\&quot;%{User-Agent}i\\&quot;&quot; combined
</span><span class="token prefix unchanged"> </span><span class="token line">197     LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b&quot; common
</span><span class="token prefix unchanged"> </span><span class="token line">198 
</span><span class="token prefix unchanged"> </span><span class="token line">199     &lt;IfModule logio_module&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">200       # You need to enable mod_logio.c to use %I and %O
</span><span class="token prefix unchanged"> </span><span class="token line">201       LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b \\&quot;%{Referer}i\\&quot; \\&quot;%{User-Agent}i\\&quot; %I %O&quot; combinedio
</span><span class="token prefix unchanged"> </span><span class="token line">202     &lt;/IfModule&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">203 
</span><span class="token prefix unchanged"> </span><span class="token line">204     #
</span><span class="token prefix unchanged"> </span><span class="token line">205     # The location and format of the access logfile (Common Logfile Format).
</span><span class="token prefix unchanged"> </span><span class="token line">206     # If you do not define any access logfiles within a &lt;VirtualHost&gt;
</span><span class="token prefix unchanged"> </span><span class="token line">207     # container, they will be logged here.  Contrariwise, if you *do*
</span><span class="token prefix unchanged"> </span><span class="token line">208     # define per-&lt;VirtualHost&gt; access logfiles, transactions will be
</span><span class="token prefix unchanged"> </span><span class="token line">209     # logged therein and *not* in this file.
</span><span class="token prefix unchanged"> </span><span class="token line">210     #
</span><span class="token prefix unchanged"> </span><span class="token line">211     #CustomLog &quot;logs/access_log&quot; common
</span><span class="token prefix unchanged"> </span><span class="token line">212 
</span><span class="token prefix unchanged"> </span><span class="token line">213     #
</span><span class="token prefix unchanged"> </span><span class="token line">214     # If you prefer a logfile with access, agent, and referer information
</span><span class="token prefix unchanged"> </span><span class="token line">215     # (Combined Logfile Format) you can use the following directive.
</span><span class="token prefix unchanged"> </span><span class="token line">216     #
</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">217     CustomLog &quot;logs/access_log&quot; combined
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">217     CustomLog &quot;/var/log/httpd/www.skillschina.com-access_log&quot; common
</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">218 &lt;/IfModule&gt;
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function E(F,D){const i=l("ExternalLinkIcon"),t=l("RouterLink");return p(),d("div",null,[m,n("ol",null,[n("li",null,[k,n("ul",null,[g,n("li",null,[f,n("blockquote",null,[n("p",null,[e("另外，推荐学习 "),n("a",b,[e("vi/vim 文本编辑器使用教程"),a(i)])])])])])]),n("li",null,[x,n("ul",null,[_,n("li",null,[w,n("ul",null,[n("li",null,[q,n("blockquote",null,[n("p",null,[n("a",y,[e("鸟哥的 Linux 私房菜 - 16.5 SELinux 初探"),a(i)])])])]),L])]),S])])]),n("h3",A,[C,e(),a(t,{to:"/serve/CentOS/CA/#%E5%88%9B%E5%BB%BA-ssl-%E8%AF%81%E4%B9%A6"},{default:o(()=>[e("创建 SSL 证书")]),_:1})]),I])}const B=c(v,[["render",E],["__file","index.html.vue"]]);export{B as default};
